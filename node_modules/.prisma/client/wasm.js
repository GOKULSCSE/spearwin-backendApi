
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  countryId: 'countryId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  stateId: 'stateId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PincodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  area: 'area',
  cityId: 'cityId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  emailVerified: 'emailVerified',
  emailVerifiedAt: 'emailVerifiedAt',
  phone: 'phone',
  phoneVerified: 'phoneVerified',
  phoneVerifiedAt: 'phoneVerifiedAt',
  password: 'password',
  role: 'role',
  status: 'status',
  lastLoginAt: 'lastLoginAt',
  profileCompleted: 'profileCompleted',
  twoFactorEnabled: 'twoFactorEnabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CandidateScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  fatherName: 'fatherName',
  dateOfBirth: 'dateOfBirth',
  gender: 'gender',
  maritalStatus: 'maritalStatus',
  profilePicture: 'profilePicture',
  bio: 'bio',
  currentTitle: 'currentTitle',
  currentCompany: 'currentCompany',
  currentLocation: 'currentLocation',
  preferredLocation: 'preferredLocation',
  noticePeriod: 'noticePeriod',
  currentSalary: 'currentSalary',
  expectedSalary: 'expectedSalary',
  profileType: 'profileType',
  experienceYears: 'experienceYears',
  cityId: 'cityId',
  address: 'address',
  linkedinUrl: 'linkedinUrl',
  githubUrl: 'githubUrl',
  portfolioUrl: 'portfolioUrl',
  isAvailable: 'isAvailable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  designation: 'designation',
  department: 'department',
  permissions: 'permissions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SuperAdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  firstName: 'firstName',
  lastName: 'lastName',
  permissions: 'permissions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  slug: 'slug',
  description: 'description',
  website: 'website',
  logo: 'logo',
  industry: 'industry',
  foundedYear: 'foundedYear',
  employeeCount: 'employeeCount',
  headquarters: 'headquarters',
  cityId: 'cityId',
  address: 'address',
  linkedinUrl: 'linkedinUrl',
  twitterUrl: 'twitterUrl',
  facebookUrl: 'facebookUrl',
  isVerified: 'isVerified',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ResumeScalarFieldEnum = {
  id: 'id',
  candidateId: 'candidateId',
  title: 'title',
  fileName: 'fileName',
  filePath: 'filePath',
  fileSize: 'fileSize',
  mimeType: 'mimeType',
  isDefault: 'isDefault',
  uploadedAt: 'uploadedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CandidateSkillScalarFieldEnum = {
  id: 'id',
  candidateId: 'candidateId',
  skillName: 'skillName',
  level: 'level',
  yearsUsed: 'yearsUsed'
};

exports.Prisma.CandidateEducationScalarFieldEnum = {
  id: 'id',
  candidateId: 'candidateId',
  institution: 'institution',
  degree: 'degree',
  fieldOfStudy: 'fieldOfStudy',
  level: 'level',
  startDate: 'startDate',
  endDate: 'endDate',
  isCompleted: 'isCompleted',
  grade: 'grade',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.CandidateExperienceScalarFieldEnum = {
  id: 'id',
  candidateId: 'candidateId',
  company: 'company',
  position: 'position',
  description: 'description',
  startDate: 'startDate',
  endDate: 'endDate',
  isCurrent: 'isCurrent',
  location: 'location',
  achievements: 'achievements',
  createdAt: 'createdAt'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  description: 'description',
  requirements: 'requirements',
  responsibilities: 'responsibilities',
  benefits: 'benefits',
  companyId: 'companyId',
  postedById: 'postedById',
  cityId: 'cityId',
  address: 'address',
  jobType: 'jobType',
  workMode: 'workMode',
  experienceLevel: 'experienceLevel',
  minExperience: 'minExperience',
  maxExperience: 'maxExperience',
  minSalary: 'minSalary',
  maxSalary: 'maxSalary',
  salaryNegotiable: 'salaryNegotiable',
  skillsRequired: 'skillsRequired',
  educationLevel: 'educationLevel',
  applicationCount: 'applicationCount',
  viewCount: 'viewCount',
  status: 'status',
  expiresAt: 'expiresAt',
  publishedAt: 'publishedAt',
  closedAt: 'closedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobApplicationScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  candidateId: 'candidateId',
  resumeId: 'resumeId',
  coverLetter: 'coverLetter',
  status: 'status',
  appliedAt: 'appliedAt',
  reviewedAt: 'reviewedAt',
  reviewedBy: 'reviewedBy',
  feedback: 'feedback',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobAlertScalarFieldEnum = {
  id: 'id',
  candidateId: 'candidateId',
  title: 'title',
  keywords: 'keywords',
  location: 'location',
  skills: 'skills',
  jobType: 'jobType',
  experienceLevel: 'experienceLevel',
  company: 'company',
  isActive: 'isActive',
  frequency: 'frequency',
  lastSentAt: 'lastSentAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OTPScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  code: 'code',
  type: 'type',
  expiresAt: 'expiresAt',
  used: 'used',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.LoginSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionToken: 'sessionToken',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  location: 'location',
  deviceInfo: 'deviceInfo',
  isActive: 'isActive',
  lastActivity: 'lastActivity',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  level: 'level',
  entity: 'entity',
  entityId: 'entityId',
  description: 'description',
  metadata: 'metadata',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  message: 'message',
  data: 'data',
  isRead: 'isRead',
  readAt: 'readAt',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  type: 'type',
  title: 'title',
  message: 'message',
  defaultData: 'defaultData',
  variables: 'variables',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSettingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  key: 'key',
  value: 'value',
  category: 'category'
};

exports.Prisma.SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  category: 'category',
  isPublic: 'isPublic',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.FCMTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  isActive: 'isActive',
  deviceInfo: 'deviceInfo',
  lastUsed: 'lastUsed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobAttributeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description',
  isActive: 'isActive',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  CANDIDATE: 'CANDIDATE',
  ADMIN: 'ADMIN',
  SUPER_ADMIN: 'SUPER_ADMIN',
  COMPANY: 'COMPANY'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED',
  PENDING_VERIFICATION: 'PENDING_VERIFICATION'
};

exports.JobStatus = exports.$Enums.JobStatus = {
  DRAFT: 'DRAFT',
  PUBLISHED: 'PUBLISHED',
  CLOSED: 'CLOSED',
  ARCHIVED: 'ARCHIVED'
};

exports.JobType = exports.$Enums.JobType = {
  FULL_TIME: 'FULL_TIME',
  PART_TIME: 'PART_TIME',
  CONTRACT: 'CONTRACT',
  INTERNSHIP: 'INTERNSHIP',
  FREELANCE: 'FREELANCE'
};

exports.WorkMode = exports.$Enums.WorkMode = {
  REMOTE: 'REMOTE',
  ONSITE: 'ONSITE',
  HYBRID: 'HYBRID'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  APPLIED: 'APPLIED',
  UNDER_REVIEW: 'UNDER_REVIEW',
  SHORTLISTED: 'SHORTLISTED',
  INTERVIEWED: 'INTERVIEWED',
  SELECTED: 'SELECTED',
  REJECTED: 'REJECTED',
  WITHDRAWN: 'WITHDRAWN'
};

exports.ExperienceLevel = exports.$Enums.ExperienceLevel = {
  ENTRY_LEVEL: 'ENTRY_LEVEL',
  MID_LEVEL: 'MID_LEVEL',
  SENIOR_LEVEL: 'SENIOR_LEVEL',
  EXECUTIVE: 'EXECUTIVE'
};

exports.EducationLevel = exports.$Enums.EducationLevel = {
  HIGH_SCHOOL: 'HIGH_SCHOOL',
  DIPLOMA: 'DIPLOMA',
  BACHELOR: 'BACHELOR',
  MASTER: 'MASTER',
  DOCTORATE: 'DOCTORATE',
  PROFESSIONAL: 'PROFESSIONAL'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  JOB_ALERT: 'JOB_ALERT',
  APPLICATION_UPDATE: 'APPLICATION_UPDATE',
  SYSTEM_NOTIFICATION: 'SYSTEM_NOTIFICATION',
  SECURITY_ALERT: 'SECURITY_ALERT',
  COMPANY_UPDATE: 'COMPANY_UPDATE'
};

exports.OTPType = exports.$Enums.OTPType = {
  EMAIL_VERIFICATION: 'EMAIL_VERIFICATION',
  PHONE_VERIFICATION: 'PHONE_VERIFICATION',
  PASSWORD_RESET: 'PASSWORD_RESET',
  TWO_FACTOR_AUTH: 'TWO_FACTOR_AUTH'
};

exports.LogLevel = exports.$Enums.LogLevel = {
  INFO: 'INFO',
  WARNING: 'WARNING',
  ERROR: 'ERROR',
  CRITICAL: 'CRITICAL'
};

exports.LogAction = exports.$Enums.LogAction = {
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  CREATE: 'CREATE',
  UPDATE: 'UPDATE',
  DELETE: 'DELETE',
  VIEW: 'VIEW',
  APPLY: 'APPLY',
  APPROVE: 'APPROVE',
  REJECT: 'REJECT'
};

exports.JobAttributeCategory = exports.$Enums.JobAttributeCategory = {
  LANGUAGE_LEVEL: 'LANGUAGE_LEVEL',
  CAREER_LEVEL: 'CAREER_LEVEL',
  FUNCTIONAL_AREA: 'FUNCTIONAL_AREA',
  GENDER: 'GENDER',
  INDUSTRY: 'INDUSTRY',
  JOB_EXPERIENCE: 'JOB_EXPERIENCE',
  JOB_SKILL: 'JOB_SKILL',
  JOB_TYPE: 'JOB_TYPE',
  JOB_SHIFT: 'JOB_SHIFT',
  DEGREE_LEVEL: 'DEGREE_LEVEL',
  DEGREE_TYPE: 'DEGREE_TYPE',
  MAJOR_SUBJECT: 'MAJOR_SUBJECT'
};

exports.Prisma.ModelName = {
  Country: 'Country',
  State: 'State',
  City: 'City',
  Pincode: 'Pincode',
  User: 'User',
  Candidate: 'Candidate',
  Admin: 'Admin',
  SuperAdmin: 'SuperAdmin',
  Company: 'Company',
  Resume: 'Resume',
  CandidateSkill: 'CandidateSkill',
  CandidateEducation: 'CandidateEducation',
  CandidateExperience: 'CandidateExperience',
  Job: 'Job',
  JobApplication: 'JobApplication',
  JobAlert: 'JobAlert',
  OTP: 'OTP',
  LoginSession: 'LoginSession',
  ActivityLog: 'ActivityLog',
  Notification: 'Notification',
  NotificationTemplate: 'NotificationTemplate',
  UserSetting: 'UserSetting',
  SystemSetting: 'SystemSetting',
  FCMToken: 'FCMToken',
  JobAttribute: 'JobAttribute'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/webnox/Gokul spearwin/spearwin-backendApi/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/webnox/Gokul spearwin/spearwin-backendApi/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// =================================================================\n// ENUMS\n// =================================================================\n\nenum UserRole {\n  CANDIDATE\n  ADMIN\n  SUPER_ADMIN\n  COMPANY\n}\n\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n  PENDING_VERIFICATION\n}\n\nenum JobStatus {\n  DRAFT\n  PUBLISHED\n  CLOSED\n  ARCHIVED\n}\n\nenum JobType {\n  FULL_TIME\n  PART_TIME\n  CONTRACT\n  INTERNSHIP\n  FREELANCE\n}\n\nenum WorkMode {\n  REMOTE\n  ONSITE\n  HYBRID\n}\n\nenum ApplicationStatus {\n  APPLIED\n  UNDER_REVIEW\n  SHORTLISTED\n  INTERVIEWED\n  SELECTED\n  REJECTED\n  WITHDRAWN\n}\n\nenum ExperienceLevel {\n  ENTRY_LEVEL\n  MID_LEVEL\n  SENIOR_LEVEL\n  EXECUTIVE\n}\n\nenum EducationLevel {\n  HIGH_SCHOOL\n  DIPLOMA\n  BACHELOR\n  MASTER\n  DOCTORATE\n  PROFESSIONAL\n}\n\nenum NotificationType {\n  JOB_ALERT\n  APPLICATION_UPDATE\n  SYSTEM_NOTIFICATION\n  SECURITY_ALERT\n  COMPANY_UPDATE\n}\n\nenum OTPType {\n  EMAIL_VERIFICATION\n  PHONE_VERIFICATION\n  PASSWORD_RESET\n  TWO_FACTOR_AUTH\n}\n\nenum LogLevel {\n  INFO\n  WARNING\n  ERROR\n  CRITICAL\n}\n\nenum LogAction {\n  LOGIN\n  LOGOUT\n  CREATE\n  UPDATE\n  DELETE\n  VIEW\n  APPLY\n  APPROVE\n  REJECT\n}\n\nenum JobAttributeCategory {\n  LANGUAGE_LEVEL\n  CAREER_LEVEL\n  FUNCTIONAL_AREA\n  GENDER\n  INDUSTRY\n  JOB_EXPERIENCE\n  JOB_SKILL\n  JOB_TYPE\n  JOB_SHIFT\n  DEGREE_LEVEL\n  DEGREE_TYPE\n  MAJOR_SUBJECT\n}\n\n// =================================================================\n// LOCATION TABLES\n// =================================================================\n\nmodel Country {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  code      String   @unique // ISO country code (e.g., IN, US)\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  states State[]\n\n  @@map(\"countries\")\n}\n\nmodel State {\n  id        String   @id @default(cuid())\n  name      String\n  code      String? // State code\n  countryId String\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  country Country @relation(fields: [countryId], references: [id], onDelete: Cascade)\n  cities  City[]\n\n  @@unique([name, countryId])\n  @@map(\"states\")\n}\n\nmodel City {\n  id        String   @id @default(cuid())\n  name      String\n  stateId   String\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  state      State       @relation(fields: [stateId], references: [id], onDelete: Cascade)\n  pincodes   Pincode[]\n  companies  Company[]\n  jobs       Job[]\n  candidates Candidate[]\n\n  @@unique([name, stateId])\n  @@map(\"cities\")\n}\n\nmodel Pincode {\n  id        String   @id @default(cuid())\n  code      String\n  area      String?\n  cityId    String\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  city City @relation(fields: [cityId], references: [id], onDelete: Cascade)\n\n  @@unique([code, cityId])\n  @@map(\"pincodes\")\n}\n\n// =================================================================\n// USER MANAGEMENT\n// =================================================================\n\nmodel User {\n  id               String     @id @default(cuid())\n  email            String     @unique\n  emailVerified    Boolean    @default(false)\n  emailVerifiedAt  DateTime?\n  phone            String?    @unique\n  phoneVerified    Boolean    @default(false)\n  phoneVerifiedAt  DateTime?\n  password         String\n  role             UserRole\n  status           UserStatus @default(PENDING_VERIFICATION)\n  lastLoginAt      DateTime?\n  profileCompleted Boolean    @default(false)\n  twoFactorEnabled Boolean    @default(false)\n  createdAt        DateTime   @default(now())\n  updatedAt        DateTime   @updatedAt\n\n  // Role-specific relations\n  candidate  Candidate?\n  admin      Admin?\n  superAdmin SuperAdmin?\n  company    Company?\n\n  // Utility relations\n  otps          OTP[]\n  loginSessions LoginSession[]\n  notifications Notification[]\n  activityLogs  ActivityLog[]\n  settings      UserSetting[]\n  fcmTokens     FCMToken[]\n\n  @@map(\"users\")\n}\n\nmodel Candidate {\n  id                String    @id @default(cuid())\n  userId            String    @unique\n  firstName         String\n  lastName          String\n  fatherName        String?\n  dateOfBirth       DateTime?\n  gender            String?\n  maritalStatus     String?\n  profilePicture    String?\n  bio               String?\n  currentTitle      String?\n  currentCompany    String?\n  currentLocation   String?\n  preferredLocation String?\n  noticePeriod      String?\n  currentSalary     Decimal?\n  expectedSalary    Decimal?\n  profileType       String? // FRESHER, EXPERIENCED\n  experienceYears   Int?\n  cityId            String?\n  address           String?\n  linkedinUrl       String?\n  githubUrl         String?\n  portfolioUrl      String?\n  isAvailable       Boolean   @default(true)\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  user         User                  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  city         City?                 @relation(fields: [cityId], references: [id])\n  resumes      Resume[]\n  applications JobApplication[]\n  skills       CandidateSkill[]\n  education    CandidateEducation[]\n  experience   CandidateExperience[]\n  jobAlerts    JobAlert[]\n\n  @@map(\"candidates\")\n}\n\nmodel Admin {\n  id          String   @id @default(cuid())\n  userId      String   @unique\n  firstName   String\n  lastName    String\n  designation String?\n  department  String?\n  permissions Json? // Flexible permissions system\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  jobs Job[]\n\n  @@map(\"admins\")\n}\n\nmodel SuperAdmin {\n  id          String   @id @default(cuid())\n  userId      String   @unique\n  firstName   String\n  lastName    String\n  permissions Json? // Full system permissions\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"super_admins\")\n}\n\nmodel Company {\n  id            String   @id @default(cuid())\n  userId        String?  @unique // Optional for future when companies can self-register\n  name          String\n  slug          String   @unique\n  description   String?\n  website       String?\n  logo          String?\n  industry      String?\n  foundedYear   Int?\n  employeeCount String?\n  headquarters  String?\n  cityId        String?\n  address       String?\n  linkedinUrl   String?\n  twitterUrl    String?\n  facebookUrl   String?\n  isVerified    Boolean  @default(false)\n  isActive      Boolean  @default(true)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)\n  city City? @relation(fields: [cityId], references: [id])\n  jobs Job[]\n\n  @@map(\"companies\")\n}\n\n// =================================================================\n// CV/RESUME MANAGEMENT\n// =================================================================\n\nmodel Resume {\n  id          String   @id @default(cuid())\n  candidateId String\n  title       String\n  fileName    String\n  filePath    String\n  fileSize    Int\n  mimeType    String\n  isDefault   Boolean  @default(false)\n  uploadedAt  DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  candidate    Candidate        @relation(fields: [candidateId], references: [id], onDelete: Cascade)\n  applications JobApplication[]\n\n  @@map(\"resumes\")\n}\n\nmodel CandidateSkill {\n  id          String  @id @default(cuid())\n  candidateId String\n  skillName   String\n  level       String? // Beginner, Intermediate, Advanced, Expert\n  yearsUsed   Int?\n\n  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)\n\n  @@unique([candidateId, skillName])\n  @@map(\"candidate_skills\")\n}\n\nmodel CandidateEducation {\n  id           String         @id @default(cuid())\n  candidateId  String\n  institution  String\n  degree       String\n  fieldOfStudy String?\n  level        EducationLevel\n  startDate    DateTime\n  endDate      DateTime?\n  isCompleted  Boolean        @default(false)\n  grade        String?\n  description  String?\n  createdAt    DateTime       @default(now())\n\n  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)\n\n  @@map(\"candidate_education\")\n}\n\nmodel CandidateExperience {\n  id           String    @id @default(cuid())\n  candidateId  String\n  company      String\n  position     String\n  description  String?\n  startDate    DateTime\n  endDate      DateTime?\n  isCurrent    Boolean   @default(false)\n  location     String?\n  achievements String?\n  createdAt    DateTime  @default(now())\n\n  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)\n\n  @@map(\"candidate_experience\")\n}\n\n// =================================================================\n// JOB MANAGEMENT\n// =================================================================\n\nmodel Job {\n  id               String          @id @default(cuid())\n  title            String\n  slug             String          @unique\n  description      String\n  requirements     String?\n  responsibilities String?\n  benefits         String?\n  companyId        String\n  postedById       String? // Admin who posted (if posted by admin)\n  cityId           String?\n  address          String?\n  jobType          JobType\n  workMode         WorkMode\n  experienceLevel  ExperienceLevel\n  minExperience    Int?\n  maxExperience    Int?\n  minSalary        Decimal?\n  maxSalary        Decimal?\n  salaryNegotiable Boolean         @default(false)\n  skillsRequired   String[] // Array of skill names\n  educationLevel   EducationLevel?\n  applicationCount Int             @default(0)\n  viewCount        Int             @default(0)\n  status           JobStatus       @default(DRAFT)\n  expiresAt        DateTime?\n  publishedAt      DateTime?\n  closedAt         DateTime?\n  createdAt        DateTime        @default(now())\n  updatedAt        DateTime        @updatedAt\n\n  company      Company          @relation(fields: [companyId], references: [id], onDelete: Cascade)\n  postedBy     Admin?           @relation(fields: [postedById], references: [id], onDelete: SetNull)\n  city         City?            @relation(fields: [cityId], references: [id])\n  applications JobApplication[]\n\n  @@index([status, publishedAt])\n  @@index([companyId, status])\n  @@index([cityId, status])\n  @@map(\"jobs\")\n}\n\nmodel JobApplication {\n  id          String            @id @default(cuid())\n  jobId       String\n  candidateId String\n  resumeId    String?\n  coverLetter String?\n  status      ApplicationStatus @default(APPLIED)\n  appliedAt   DateTime          @default(now())\n  reviewedAt  DateTime?\n  reviewedBy  String? // Admin/Company user who reviewed\n  feedback    String?\n  updatedAt   DateTime          @updatedAt\n\n  job       Job       @relation(fields: [jobId], references: [id], onDelete: Cascade)\n  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)\n  resume    Resume?   @relation(fields: [resumeId], references: [id], onDelete: SetNull)\n\n  @@unique([jobId, candidateId])\n  @@index([candidateId, status])\n  @@index([jobId, status])\n  @@map(\"job_applications\")\n}\n\nmodel JobAlert {\n  id              String    @id @default(cuid())\n  candidateId     String\n  title           String\n  keywords        String?\n  location        String?\n  skills          String[] // Array of skill names\n  jobType         String?\n  experienceLevel String?\n  company         String?\n  isActive        Boolean   @default(true)\n  frequency       String    @default(\"WEEKLY\") // DAILY, WEEKLY, MONTHLY\n  lastSentAt      DateTime?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  candidate Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)\n\n  @@index([candidateId, isActive])\n  @@index([frequency, isActive])\n  @@map(\"job_alerts\")\n}\n\n// =================================================================\n// SECURITY & UTILITY TABLES\n// =================================================================\n\nmodel OTP {\n  id        String    @id @default(cuid())\n  userId    String\n  code      String\n  type      OTPType\n  expiresAt DateTime\n  used      Boolean   @default(false)\n  usedAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, type, used])\n  @@map(\"otps\")\n}\n\nmodel LoginSession {\n  id           String   @id @default(cuid())\n  userId       String\n  sessionToken String   @unique\n  userAgent    String?\n  ipAddress    String?\n  location     String?\n  deviceInfo   String?\n  isActive     Boolean  @default(true)\n  lastActivity DateTime @default(now())\n  expiresAt    DateTime\n  createdAt    DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isActive])\n  @@index([sessionToken])\n  @@map(\"login_sessions\")\n}\n\nmodel ActivityLog {\n  id          String    @id @default(cuid())\n  userId      String?\n  action      LogAction\n  level       LogLevel  @default(INFO)\n  entity      String? // Table/resource affected\n  entityId    String? // ID of the affected record\n  description String\n  metadata    Json? // Additional context data\n  ipAddress   String?\n  userAgent   String?\n  createdAt   DateTime  @default(now())\n\n  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@index([userId, action])\n  @@index([level, createdAt])\n  @@index([entity, entityId])\n  @@map(\"activity_logs\")\n}\n\nmodel Notification {\n  id        String           @id @default(cuid())\n  userId    String\n  type      NotificationType\n  title     String\n  message   String\n  data      Json? // Additional notification data\n  isRead    Boolean          @default(false)\n  readAt    DateTime?\n  expiresAt DateTime?\n  createdAt DateTime         @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isRead])\n  @@index([type, createdAt])\n  @@map(\"notifications\")\n}\n\nmodel NotificationTemplate {\n  id          String           @id @default(cuid())\n  name        String           @unique\n  description String?\n  type        NotificationType\n  title       String\n  message     String\n  defaultData Json? // Default data for the template\n  variables   String[] // Array of variable names that can be used in the template\n  isActive    Boolean          @default(true)\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n\n  @@map(\"notification_templates\")\n}\n\nmodel UserSetting {\n  id       String  @id @default(cuid())\n  userId   String\n  key      String\n  value    String\n  category String? // Group settings by category\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, key])\n  @@map(\"user_settings\")\n}\n\nmodel SystemSetting {\n  id          String   @id @default(cuid())\n  key         String   @unique\n  value       String\n  description String?\n  category    String?\n  isPublic    Boolean  @default(false) // Whether this setting is visible to frontend\n  updatedAt   DateTime @updatedAt\n  createdAt   DateTime @default(now())\n\n  @@map(\"system_settings\")\n}\n\n// =================================================================\n// FCM PUSH NOTIFICATION TABLES\n// =================================================================\n\nmodel FCMToken {\n  id         String    @id @default(cuid())\n  userId     String\n  token      String    @unique\n  isActive   Boolean   @default(true)\n  deviceInfo Json? // Device information (platform, version, etc.)\n  lastUsed   DateTime?\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, isActive])\n  @@index([token])\n  @@map(\"fcm_tokens\")\n}\n\n// =================================================================\n// JOB ATTRIBUTES MANAGEMENT\n// =================================================================\n\nmodel JobAttribute {\n  id          String               @id @default(cuid())\n  name        String\n  category    JobAttributeCategory\n  description String?\n  isActive    Boolean              @default(true)\n  sortOrder   Int                  @default(0)\n  createdAt   DateTime             @default(now())\n  updatedAt   DateTime             @updatedAt\n\n  @@unique([name, category])\n  @@index([category, isActive])\n  @@index([category, sortOrder])\n  @@map(\"job_attributes\")\n}\n",
  "inlineSchemaHash": "821138867c823fb953a83b2c4ec7608e374262b7714345734c4655ee73a691dd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Country\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"states\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"CountryToState\"}],\"dbName\":\"countries\"},\"State\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToState\"},{\"name\":\"cities\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToState\"}],\"dbName\":\"states\"},\"City\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"CityToState\"},{\"name\":\"pincodes\",\"kind\":\"object\",\"type\":\"Pincode\",\"relationName\":\"CityToPincode\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CityToCompany\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CityToJob\"},{\"name\":\"candidates\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToCity\"}],\"dbName\":\"cities\"},\"Pincode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"area\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToPincode\"}],\"dbName\":\"pincodes\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phoneVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"UserStatus\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profileCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"twoFactorEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToUser\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToUser\"},{\"name\":\"superAdmin\",\"kind\":\"object\",\"type\":\"SuperAdmin\",\"relationName\":\"SuperAdminToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"otps\",\"kind\":\"object\",\"type\":\"OTP\",\"relationName\":\"OTPToUser\"},{\"name\":\"loginSessions\",\"kind\":\"object\",\"type\":\"LoginSession\",\"relationName\":\"LoginSessionToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"UserSetting\",\"relationName\":\"UserToUserSetting\"},{\"name\":\"fcmTokens\",\"kind\":\"object\",\"type\":\"FCMToken\",\"relationName\":\"FCMTokenToUser\"}],\"dbName\":\"users\"},\"Candidate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fatherName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maritalStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentCompany\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferredLocation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"noticePeriod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentSalary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"expectedSalary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"profileType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experienceYears\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"portfolioUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CandidateToUser\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CandidateToCity\"},{\"name\":\"resumes\",\"kind\":\"object\",\"type\":\"Resume\",\"relationName\":\"CandidateToResume\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"CandidateToJobApplication\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"CandidateSkill\",\"relationName\":\"CandidateToCandidateSkill\"},{\"name\":\"education\",\"kind\":\"object\",\"type\":\"CandidateEducation\",\"relationName\":\"CandidateToCandidateEducation\"},{\"name\":\"experience\",\"kind\":\"object\",\"type\":\"CandidateExperience\",\"relationName\":\"CandidateToCandidateExperience\"},{\"name\":\"jobAlerts\",\"kind\":\"object\",\"type\":\"JobAlert\",\"relationName\":\"CandidateToJobAlert\"}],\"dbName\":\"candidates\"},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"designation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminToUser\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"AdminToJob\"}],\"dbName\":\"admins\"},\"SuperAdmin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SuperAdminToUser\"}],\"dbName\":\"super_admins\"},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"foundedYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeeCount\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"headquarters\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitterUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebookUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToCompany\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CompanyToJob\"}],\"dbName\":\"companies\"},\"Resume\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToResume\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"JobApplicationToResume\"}],\"dbName\":\"resumes\"},\"CandidateSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"yearsUsed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToCandidateSkill\"}],\"dbName\":\"candidate_skills\"},\"CandidateEducation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"institution\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"degree\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fieldOfStudy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"EducationLevel\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"grade\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToCandidateEducation\"}],\"dbName\":\"candidate_education\"},\"CandidateExperience\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isCurrent\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"achievements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToCandidateExperience\"}],\"dbName\":\"candidate_experience\"},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requirements\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsibilities\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobType\",\"kind\":\"enum\",\"type\":\"JobType\"},{\"name\":\"workMode\",\"kind\":\"enum\",\"type\":\"WorkMode\"},{\"name\":\"experienceLevel\",\"kind\":\"enum\",\"type\":\"ExperienceLevel\"},{\"name\":\"minExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxExperience\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minSalary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxSalary\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"salaryNegotiable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"skillsRequired\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"educationLevel\",\"kind\":\"enum\",\"type\":\"EducationLevel\"},{\"name\":\"applicationCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"viewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"JobStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToJob\"},{\"name\":\"postedBy\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToJob\"},{\"name\":\"city\",\"kind\":\"object\",\"type\":\"City\",\"relationName\":\"CityToJob\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"JobToJobApplication\"}],\"dbName\":\"jobs\"},\"JobApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resumeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverLetter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"appliedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToJobApplication\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToJobApplication\"},{\"name\":\"resume\",\"kind\":\"object\",\"type\":\"Resume\",\"relationName\":\"JobApplicationToResume\"}],\"dbName\":\"job_applications\"},\"JobAlert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"candidateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"keywords\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experienceLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"candidate\",\"kind\":\"object\",\"type\":\"Candidate\",\"relationName\":\"CandidateToJobAlert\"}],\"dbName\":\"job_alerts\"},\"OTP\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"OTPType\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"used\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OTPToUser\"}],\"dbName\":\"otps\"},\"LoginSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastActivity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LoginSessionToUser\"}],\"dbName\":\"login_sessions\"},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"enum\",\"type\":\"LogAction\"},{\"name\":\"level\",\"kind\":\"enum\",\"type\":\"LogLevel\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"}],\"dbName\":\"activity_logs\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"NotificationTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"notification_templates\"},\"UserSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSetting\"}],\"dbName\":\"user_settings\"},\"SystemSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"system_settings\"},\"FCMToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastUsed\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FCMTokenToUser\"}],\"dbName\":\"fcm_tokens\"},\"JobAttribute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"JobAttributeCategory\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"job_attributes\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

